name: Deploy Azure Function App

on:
  push:
    branches:
      - main  
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: ${{ secrets.FUNCTION_APP_NAME }}
  AZURE_RESOURCE_GROUP: rg-tchungry-prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Baixa o código do seu repositório para a máquina virtual
      - name: 'Checkout'
        uses: actions/checkout@v4

      # 2. Instala o SDK do .NET 8 na máquina virtual, pois seu projeto precisa dele
      - name: 'Setup .NET'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # 3. Compila e publica o projeto da Function App
      - name: 'Dotnet Publish'
        run: |
          dotnet restore
          dotnet publish --configuration Release --output ./publish --self-contained true -p:PublishReadyToRun=true
          

      # 4. Faz o login no Azure usando as credenciais seguras que configuramos
      - name: 'Azure Login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 5. Faz o deploy da Function App para o Azure
      - name: 'Deploy Azure Function App'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
          package: './publish'

      # 6. Configura as variáveis de ambiente na Function App no Azure
      # É aqui que os segredos do GitHub são passados de forma segura para a sua função na nuvem
      - name: 'Set Application Settings in Azure'
        uses: Azure/CLI@v1
        with:
          inlineScript: |
            # 1. Comando correto para configurar a CADEIA DE LIGAÇÃO, usando o comando 'webapp'
            az webapp config connection-string set \
              --name ${{ env.AZURE_FUNCTIONAPP_NAME }} \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --connection-string-type SQLAzure \
              --settings "Default=${{ secrets.DB_CONNECTION_STRING }}"

            # 2. Comando para configurar as outras CONFIGURAÇÕES DA APLICAÇÃO
            az functionapp config appsettings set \
              --name ${{ env.AZURE_FUNCTIONAPP_NAME }} \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --settings "JWT__Key=${{ secrets.JWT_KEY }}" "JWT__Issuer=${{ secrets.JWT_ISSUER }}" "JWT__Audience=${{ secrets.JWT_AUDIENCE }}"
