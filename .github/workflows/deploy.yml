name: Deploy Azure Function App

on:
  push:
    branches:
      - main  
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: ${{ secrets.FUNCTION_APP_NAME }}
  AZURE_RESOURCE_GROUP: rg-tchungry-prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Baixa o c√≥digo do reposit√≥rio
      - name: 'Checkout code'
        uses: actions/checkout@v4

      # 2. Instala o SDK do .NET 8
      - name: 'Setup .NET'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # 3. Restaura depend√™ncias
      - name: 'Restore dependencies'
        run: dotnet restore

      # 4. Compila e publica o projeto
      - name: 'Build and Publish'
        run: |
          dotnet publish --configuration Release --output ./publish --self-contained true -p:PublishReadyToRun=true

      # 5. Faz login no Azure
      - name: 'Azure Login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 6. REMOVE RESTRI√á√ïES DE REDE TEMPORARIAMENTE (site + SCM)
      - name: 'Remove network restrictions temporarily'
        uses: Azure/CLI@v1
        with:
          inlineScript: |
            echo "üîì Removing network restrictions temporarily..."
            
            FUNC_NAME="${{ env.AZURE_FUNCTIONAPP_NAME }}"
            RG_NAME="${{ env.AZURE_RESOURCE_GROUP }}"
            
            # Remove restri√ß√µes do site principal
            echo "üìç Removing main site restrictions..."
            az functionapp config access-restriction show \
              --name $FUNC_NAME \
              --resource-group $RG_NAME \
              --query "ipSecurityRestrictions[].name" -o tsv | \
            while read rule; do
              if [ ! -z "$rule" ] && [ "$rule" != "Allow" ]; then
                echo "  Removing rule: $rule"
                az functionapp config access-restriction remove \
                  --name $FUNC_NAME \
                  --resource-group $RG_NAME \
                  --rule-name "$rule" 2>/dev/null || true
              fi
            done
            
            # Remove restri√ß√µes do SCM site (Kudu/Deploy) - CR√çTICO!
            echo "üîß Removing SCM site restrictions..."
            az functionapp config access-restriction show \
              --name $FUNC_NAME \
              --resource-group $RG_NAME \
              --query "scmIpSecurityRestrictions[].name" -o tsv | \
            while read rule; do
              if [ ! -z "$rule" ] && [ "$rule" != "Allow" ]; then
                echo "  Removing SCM rule: $rule"
                az functionapp config access-restriction remove \
                  --name $FUNC_NAME \
                  --resource-group $RG_NAME \
                  --rule-name "$rule" \
                  --scm-site 2>/dev/null || true
              fi
            done
            
            # Garante acesso p√∫blico habilitado
            echo "üåê Enabling public network access..."
            az resource update \
              --resource-group $RG_NAME \
              --name $FUNC_NAME \
              --resource-type "Microsoft.Web/sites" \
              --set properties.publicNetworkAccess=Enabled 2>/dev/null || true
            
            echo "‚úÖ Restrictions removed (site + SCM)!"

      # 7. Aguarda propaga√ß√£o das mudan√ßas de rede
      - name: 'Wait for network propagation'
        run: |
          echo "‚è≥ Waiting for network changes to propagate..."
          sleep 45
          echo "‚úÖ Ready for deployment!"

      # 8. Configura vari√°veis de ambiente
      - name: 'Set Application Settings'
        uses: Azure/CLI@v1
        with:
          inlineScript: |
            echo "‚öôÔ∏è Configuring application settings..."
            
            # Connection String do Banco
            az webapp config connection-string set \
              --name ${{ env.AZURE_FUNCTIONAPP_NAME }} \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --connection-string-type SQLAzure \
              --settings "Default=${{ secrets.DB_CONNECTION_STRING }}"
            
            # Configura√ß√µes JWT
            az functionapp config appsettings set \
              --name ${{ env.AZURE_FUNCTIONAPP_NAME }} \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --settings \
                "JWT__Key=${{ secrets.JWT_KEY }}" \
                "JWT__Issuer=${{ secrets.JWT_ISSUER }}" \
                "JWT__Audience=${{ secrets.JWT_AUDIENCE }}"
            
            echo "‚úÖ Settings configured!"

      # 9. Faz o deploy da Function App
      - name: 'Deploy to Azure Function App'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: './publish'

      # 10. RESTAURA AS RESTRI√á√ïES DE REDE (site + SCM)
      - name: 'Restore network restrictions'
        if: always() # Executa mesmo se houver falha nos steps anteriores
        uses: Azure/CLI@v1
        with:
          inlineScript: |
            echo "üîí Restoring network restrictions..."
            
            FUNC_NAME="${{ env.AZURE_FUNCTIONAPP_NAME }}"
            RG_NAME="${{ env.AZURE_RESOURCE_GROUP }}"
            
            # === SITE PRINCIPAL ===
            echo "üìç Configuring access restrictions on main site..."
            
            # Remove regras antigas se existirem
            az functionapp config access-restriction remove \
              --name $FUNC_NAME \
              --resource-group $RG_NAME \
              --rule-name DenyAllPublic \
              --action Deny 2>/dev/null || true
            
            az functionapp config access-restriction remove \
              --name $FUNC_NAME \
              --resource-group $RG_NAME \
              --rule-name AllowAPIM \
              --action Allow 2>/dev/null || true
            
            # Libera subnet do APIM (10.0.3.0/24)
            az functionapp config access-restriction add \
              --name $FUNC_NAME \
              --resource-group $RG_NAME \
              --rule-name AllowAPIM \
              --action Allow \
              --vnet-name vnet-tchungry-prod \
              --subnet snet-apim \
              --priority 100
            
            # Bloqueia todo o resto
            az functionapp config access-restriction add \
              --name $FUNC_NAME \
              --resource-group $RG_NAME \
              --rule-name DenyAllPublic \
              --action Deny \
              --ip-address 0.0.0.0/0 \
              --priority 2147483647
            
            # === SCM SITE (KUDU/DEPLOY) ===
            echo "üîß Configuring access restrictions on SCM site..."
            
            # Remove regras antigas se existirem
            az functionapp config access-restriction remove \
              --name $FUNC_NAME \
              --resource-group $RG_NAME \
              --rule-name DenyAllPublic_SCM \
              --action Deny \
              --scm-site 2>/dev/null || true
            
            az functionapp config access-restriction remove \
              --name $FUNC_NAME \
              --resource-group $RG_NAME \
              --rule-name AllowAPIM_SCM \
              --action Allow \
              --scm-site 2>/dev/null || true
            
            # Libera subnet do APIM no SCM tamb√©m
            az functionapp config access-restriction add \
              --name $FUNC_NAME \
              --resource-group $RG_NAME \
              --rule-name AllowAPIM_SCM \
              --action Allow \
              --vnet-name vnet-tchungry-prod \
              --subnet snet-apim \
              --scm-site \
              --priority 100
            
            # Bloqueia todo o resto no SCM
            az functionapp config access-restriction add \
              --name $FUNC_NAME \
              --resource-group $RG_NAME \
              --rule-name DenyAllPublic_SCM \
              --action Deny \
              --ip-address 0.0.0.0/0 \
              --priority 2147483647 \
              --scm-site
            
            echo "‚úÖ Network restrictions restored!"
            echo "üìä Final configuration:"
            echo "  ‚úÖ AllowAPIM (subnet snet-apim) - Priority 100"
            echo "  ‚ùå DenyAllPublic (0.0.0.0/0) - Priority 2147483647"
            echo "‚ÑπÔ∏è Function App is now PRIVATE - only APIM (subnet snet-apim) can access"

      # 11. Logout do Azure
      - name: 'Azure Logout'
        if: always()
        run: |
          az logout
          echo "‚úÖ Logged out from Azure"