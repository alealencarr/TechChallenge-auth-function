name: Deploy Azure Function

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Baixa o c√≥digo do reposit√≥rio
      - name: 'Checkout'
        uses: actions/checkout@v4
      
      # 2. Instala o SDK do .NET 8
      - name: 'Setup .NET'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      
      # 3. Compila e publica o projeto
      - name: 'Build and Publish'
        run: |
          dotnet publish --configuration Release --output ./publish --self-contained true -p:PublishReadyToRun=true
      
      # 4. Faz login no Azure
      - name: 'Azure Login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      # 5. REMOVE RESTRI√á√ïES DE REDE TEMPORARIAMENTE (Site + SCM)
      - name: 'Remover restri√ß√µes de rede (tempor√°rio)'
        uses: Azure/CLI@v1
        with:
          inlineScript: |
            echo "üîì Removendo restri√ß√µes de rede temporariamente..."
            
            FUNC_NAME="${{ secrets.FUNCTION_APP_NAME }}"
            RG_NAME="rg-tchungry-prod"
            
            # Remove restri√ß√µes do site principal
            echo "üìç Removendo restri√ß√µes do site principal..."
            az functionapp config access-restriction show \
              --name $FUNC_NAME \
              --resource-group $RG_NAME \
              --query "ipSecurityRestrictions[].name" -o tsv | \
            while read rule; do
              if [ ! -z "$rule" ] && [ "$rule" != "Allow" ]; then
                echo "  Removendo regra: $rule"
                az functionapp config access-restriction remove \
                  --name $FUNC_NAME \
                  --resource-group $RG_NAME \
                  --rule-name "$rule" 2>/dev/null || true
              fi
            done
            
            # Remove restri√ß√µes do SCM site (Kudu/Deploy) - CR√çTICO PARA DEPLOY!
            echo "üîß Removendo restri√ß√µes do SCM site (Kudu)..."
            az functionapp config access-restriction show \
              --name $FUNC_NAME \
              --resource-group $RG_NAME \
              --query "scmIpSecurityRestrictions[].name" -o tsv | \
            while read rule; do
              if [ ! -z "$rule" ] && [ "$rule" != "Allow" ]; then
                echo "  Removendo regra SCM: $rule"
                az functionapp config access-restriction remove \
                  --name $FUNC_NAME \
                  --resource-group $RG_NAME \
                  --rule-name "$rule" \
                  --scm-site 2>/dev/null || true
              fi
            done
            
            # Garante acesso p√∫blico habilitado
            echo "üåê Habilitando acesso p√∫blico..."
            az resource update \
              --resource-group $RG_NAME \
              --name $FUNC_NAME \
              --resource-type "Microsoft.Web/sites" \
              --set properties.publicNetworkAccess=Enabled 2>/dev/null || true
            
            echo "‚úÖ Restri√ß√µes removidas (site + SCM)!"
      
      # 6. Aguarda propaga√ß√£o das mudan√ßas de rede
      - name: 'Aguardar propaga√ß√£o'
        run: |
          echo "‚è≥ Aguardando propaga√ß√£o das mudan√ßas de rede..."
          sleep 45
          echo "‚úÖ Propaga√ß√£o conclu√≠da!"
      
      # 7. Configura as vari√°veis de ambiente
      - name: 'Set Application Settings in Azure'
        uses: Azure/CLI@v1
        with:
          inlineScript: |
            echo "‚öôÔ∏è Configurando vari√°veis de ambiente..."
            
            # Connection String do Banco
            az webapp config connection-string set \
              --name ${{ secrets.FUNCTION_APP_NAME }} \
              --resource-group rg-tchungry-prod \
              --connection-string-type SQLAzure \
              --settings "Default=${{ secrets.DB_CONNECTION_STRING }}"
            
            # Configura√ß√µes JWT
            az functionapp config appsettings set \
              --name ${{ secrets.FUNCTION_APP_NAME }} \
              --resource-group rg-tchungry-prod \
              --settings \
                "JWT__Key=${{ secrets.JWT_KEY }}" \
                "JWT__Issuer=${{ secrets.JWT_ISSUER }}" \
                "JWT__Audience=${{ secrets.JWT_AUDIENCE }}"
            
            echo "‚úÖ Vari√°veis configuradas!"
      
      # 8. Faz o deploy da Function App
      - name: 'Deploy to Azure Function'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ secrets.FUNCTION_APP_NAME }}
          package: './publish'
      
      # 9. RESTAURA AS RESTRI√á√ïES DE REDE (Site + SCM)
      - name: 'Restaurar restri√ß√µes de rede'
        if: always() # Executa mesmo se houver falha nos steps anteriores
        uses: Azure/CLI@v1
        with:
          inlineScript: |
            echo "üîí Restaurando restri√ß√µes de rede..."
            
            FUNC_NAME="${{ secrets.FUNCTION_APP_NAME }}"
            RG_NAME="rg-tchungry-prod"
            
            # === SITE PRINCIPAL ===
            echo "üìç Bloqueando acesso p√∫blico no site principal..."
            
            # Remove a regra DenyAllPublic se j√° existir
            az functionapp config access-restriction remove \
              --name $FUNC_NAME \
              --resource-group $RG_NAME \
              --rule-name DenyAllPublic 2>/dev/null || true
            
            # Recria a regra bloqueando todo acesso p√∫blico
            az functionapp config access-restriction add \
              --name $FUNC_NAME \
              --resource-group $RG_NAME \
              --rule-name DenyAllPublic \
              --action Deny \
              --ip-address 0.0.0.0/0 \
              --priority 2147483647
            
            # === SCM SITE (KUDU/DEPLOY) ===
            echo "üîß Bloqueando acesso p√∫blico no SCM site..."
            
            # Remove a regra DenyAllPublic_SCM se j√° existir
            az functionapp config access-restriction remove \
              --name $FUNC_NAME \
              --resource-group $RG_NAME \
              --rule-name DenyAllPublic_SCM \
              --scm-site 2>/dev/null || true
            
            # Recria a regra bloqueando todo acesso p√∫blico no SCM
            az functionapp config access-restriction add \
              --name $FUNC_NAME \
              --resource-group $RG_NAME \
              --rule-name DenyAllPublic_SCM \
              --action Deny \
              --ip-address 0.0.0.0/0 \
              --priority 2147483647 \
              --scm-site
            
            echo "‚úÖ Restri√ß√µes restauradas!"
            echo "‚ÑπÔ∏è Apenas o APIM via Private Endpoint consegue acessar agora."
      
      # 10. Logout do Azure
      - name: 'Azure Logout'
        if: always()
        run: az logout
