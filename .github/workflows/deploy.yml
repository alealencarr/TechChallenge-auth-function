name: Deploy Azure Function

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Baixa o c√≥digo do reposit√≥rio
      - name: 'Checkout'
        uses: actions/checkout@v4
      
      # 2. Instala o SDK do .NET 8
      - name: 'Setup .NET'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      
      # 3. Compila e publica o projeto
      - name: 'Build and Publish'
        run: |
          dotnet publish --configuration Release --output ./publish --self-contained true -p:PublishReadyToRun=true
      
      # 4. Faz login no Azure
      - name: 'Azure Login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      # 5. REMOVE RESTRI√á√ïES DE REDE TEMPORARIAMENTE
      - name: 'Remover restri√ß√µes de rede (tempor√°rio)'
        uses: Azure/CLI@v1
        with:
          inlineScript: |
            echo "üîì Removendo restri√ß√µes de rede temporariamente..."
            
            # Lista todas as regras atuais e remove
            az functionapp config access-restriction show \
              --name ${{ secrets.FUNCTION_APP_NAME }} \
              --resource-group rg-tchungry-prod \
              --query "ipSecurityRestrictions[].name" -o tsv | \
            while read rule; do
              if [ ! -z "$rule" ]; then
                az functionapp config access-restriction remove \
                  --name ${{ secrets.FUNCTION_APP_NAME }} \
                  --resource-group rg-tchungry-prod \
                  --rule-name "$rule" || true
              fi
            done
            
            echo "‚úÖ Restri√ß√µes removidas!"
      
      # 6. Aguarda propaga√ß√£o das mudan√ßas de rede
      - name: 'Aguardar propaga√ß√£o'
        run: sleep 30
      
      # 7. Configura as vari√°veis de ambiente
      - name: 'Set Application Settings in Azure'
        uses: Azure/CLI@v1
        with:
          inlineScript: |
            echo "‚öôÔ∏è Configurando vari√°veis de ambiente..."
            
            # Connection String do Banco
            az webapp config connection-string set \
              --name ${{ secrets.FUNCTION_APP_NAME }} \
              --resource-group rg-tchungry-prod \
              --connection-string-type SQLAzure \
              --settings "Default=${{ secrets.DB_CONNECTION_STRING }}"
            
            # Configura√ß√µes JWT
            az functionapp config appsettings set \
              --name ${{ secrets.FUNCTION_APP_NAME }} \
              --resource-group rg-tchungry-prod \
              --settings \
                "JWT__Key=${{ secrets.JWT_KEY }}" \
                "JWT__Issuer=${{ secrets.JWT_ISSUER }}" \
                "JWT__Audience=${{ secrets.JWT_AUDIENCE }}"
            
            echo "‚úÖ Vari√°veis configuradas!"
      
      # 8. Faz o deploy da Function App
      - name: 'Deploy to Azure Function'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ secrets.FUNCTION_APP_NAME }}
          package: './publish'
      
      # 9. RESTAURA AS RESTRI√á√ïES DE REDE
      - name: 'Restaurar restri√ß√µes de rede'
        if: always() # Executa mesmo se houver falha nos steps anteriores
        uses: Azure/CLI@v1
        with:
          inlineScript: |
            echo "üîí Restaurando restri√ß√µes de rede..."
            
            # Bloqueia todo acesso p√∫blico
            az functionapp config access-restriction add \
              --name ${{ secrets.FUNCTION_APP_NAME }} \
              --resource-group rg-tchungry-prod \
              --rule-name DenyAllPublic \
              --action Deny \
              --priority 2147483647
            
            # Libera apenas o APIM (ajuste o IP/CIDR do seu APIM)
            az functionapp config access-restriction add \
              --name ${{ secrets.FUNCTION_APP_NAME }} \
              --resource-group rg-tchungry-prod \
              --rule-name AllowAPIM \
              --action Allow \
              --priority 100 \
              --vnet-name sua-vnet \
              --subnet snet-apim
            
            # OU se usar Private Endpoint, apenas nega p√∫blico:
            # az functionapp config set \
            #   --name ${{ secrets.FUNCTION_APP_NAME }} \
            #   --resource-group rg-tchungry-prod \
            #   --public-network-access Disabled
            
            echo "‚úÖ Restri√ß√µes restauradas! Function App est√° privada novamente."
      
      # 10. Logout do Azure
      - name: 'Azure Logout'
        if: always()
        run: az logout
